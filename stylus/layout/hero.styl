@require "../utilities/mixins"

$hero-body-padding ?= 3rem 1.5rem
$hero-body-padding-small ?= 1.5rem
$hero-body-padding-medium ?= 9rem 1.5rem
$hero-body-padding-large ?= 18rem 1.5rem

$hero-colors ?= $colors

colorfulHero($colors= hero-colors)
	for $name, $pair in $colors
		$color = $pair['1']
		$color-invert = $pair['2']
		&{$is-modifier}{$name}
			background-color: $color
			color: $color-invert
			a:not(.button):not(.dropdown-item):not(.tag):not(.pagination-link.is-current),
			strong
				color: inherit
			{$title-selector}
				color: $color-invert
			{$subtitle-selector}
				color bulmaRgba($color-invert, 0.9)
				a:not(.button),
				strong
					color: $color-invert
			{$navbar-menu-selector}
				+touch()
					background-color: $color
			{$navbar-item-selector},
			{$navbar-link-selector}
				color: bulmaRgba($color-invert, 0.7)
			a{$navbar-item-selector},
			{$navbar-link-selector}
				&:hover,
				&{$active-modifier}
					background-color: bulmaDarken($color, 5%)
					color: $color-invert
			{$tabs-selector}
				a
					color: $color-invert
					opacity: 0.9
					&:hover
						opacity: 1
				li
					&{$active-modifier} a
						opacity 1
				&{$boxed-modifier},
				&{$toggle-modifier}
					a
						color: $color-invert
						&:hover
							background-color: bulmaRgba($scheme-invert, 0.1)
					li.is-active a
						&,
						&:hover
							background-color: $color-invert
							border-color: $color-invert
							color: $color
			// Modifiers
			if typeof($color) == 'rgba' or typeof($color) == 'hsla'
				&{$bold-modifier}
					$gradient-top-left = bulmaDarken(bulma-stylus-saturate(spin($color, -10deg), 10%), 10%)
					$gradient-bottom-right = bulma-stylus-lighten(bulma-stylus-saturate(spin($color, 10deg), 5%), 5%)
					background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%)
					+mobile()
						{$navbar-menu-selector}
							background-image: linear-gradient(141deg, $gradient-top-left 0%, $color 71%, $gradient-bottom-right 100%)

// Main container
_hero()
	align-items: stretch
	display: flex
	flex-direction: column
	justify-content: space-between
	{$navbar-selector}
		background: none
	{$tabs-selector}
		ul
			border-bottom: none
	// Colors
	updateGlobalOptions()
	colorfulHero($hero-colors) if !$silent.colorful.hero

	// Sizes
	&{$small-modifier}
		& {$hero-body-selector}
			padding: $hero-body-padding-small
	&{$medium-modifier}
		+tablet()
			& {$hero-body-selector}
				padding: $hero-body-padding-medium
	&{$large-modifier}
		+tablet()
			& {$hero-body-selector}
				padding: $hero-body-padding-large
	&{$halfheight-modifier},
	&{$fullheight-modifier},
	&{$fullheight-with-navbar-modifier}
		& {$hero-body-selector}
			align-items: center
			display: flex
			& > {$container-selector}
				flex-grow: 1
				flex-shrink: 1
	&{$halfheight-modifier}
		min-height: 50vh
	&{$fullheight-modifier}
		min-height: 100vh

	// Components

	/{$hero-video-selector}
		@extend $overlay
		overflow: hidden
		video
			left: 50%
			min-height: 100%
			min-width: 100%
			position: absolute
			top: 50%
			transform: translate3d(-50%, -50%, 0)

		// Modifiers
		&{$transparent-modifier}
			opacity: 0.3

		// Responsiveness
		+mobile()
			display: none

	/{$hero-buttons-selector}
		margin-top: 1.5rem

		// Responsiveness
		+mobile()
			{$button-selector}
				display: flex
				&:not(:last-child)
					margin-bottom: 0.75rem
		+tablet()
			display: flex
			justify-content: center
			{$button-selector}:not(:last-child)
				ltr-property("margin", 1.5rem)

	// Containers
	{$hero-head-selector},
	{$hero-foot-selector}
		flex-grow: 0
		flex-shrink: 0

	{$hero-body-selector}
		flex-grow: 1
		flex-shrink: 0
		padding: $hero-body-padding

if !$silent.layout.hero && !$silent-mode
	{$hero-selector}
		_hero()
